"Az én gépemen még működött..."
-> Persze, abban évek "környezetbeállítása" van
Tele van szoftverekkel, alkalmazásokkal
99% tök fölösleges egy adott szoftverhez (google, Excel, Counter Strike...)
-> Docker file: leírjuk mi az, ami viszont mindenképp szükséges
(Dockerfile bemutatás)
(Docker manual bemutatás - https://docs.docker.com/engine/reference/builder/#from)
Docker build végigfuttatása
docker build . -t codecooldockerdemo-frontend
docker tag codecooldockerdemo-frontend tothbalint719/codecooldockerdemo-frontend:1.0.2
docker push tothbalint719/codecooldockerdemo-frontend:1.0.2
(Docker cli bemutatása - https://docs.docker.com/engine/reference/commandline/cli/)
Docker push eredménye a docker hubra kerül (https://hub.docker.com/)
Giten tároljuk a forráskódot, gittel kezeljük, és használok egy remote git providert (github, gitlab, bitbucket... ezt már tudják)
Dockerizálva tároljuk az elkészült alkalmazásokat, és használunk egy remote "artifact repositoryt" (dockerhub, artifactory, nexus)
És van egy harmadik gombóc, mert ezt még mindig nem látja a világ - ahol ezek futnak
Container orhcestration
Vertikális és horizontális skálázás (0-akárhány node, 0MB RAM - akárhány TB RAM)
Tárhely beállítás
Milyen URL-en lehessen megtalálni
Logok - egy felület, ahopl tudod olvasgatni, hogy mi az error
Health check beállítás - tudj róla, ha összeszarta magát / induljon újra automatikusan
Környezeti változók - példa az alkalmazásban
(Megismerkedés a sloppy.io-val - https://admin.sloppy.io/)
Alternatívák: AWS, Digital Ocean... on-premises megoldások - OKD
...Sokar írtunk terminálba -> CI/CD, nagyvonalakban
Export as JSON
(Api bemutatása - https://apidocs.sloppy.io/)
